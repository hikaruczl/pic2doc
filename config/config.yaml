# Advanced OCR Configuration File

# LLM Provider Settings
llm:
  primary_provider: "qwen"  # openai, anthropic, gemini, or qwen
  fallback_provider: null  # openai, anthropic, gemini, qwen, or null

  openai:
    model: "gpt-4-vision-preview"
    max_tokens: 4096
    temperature: 0.1
    detail: "high"  # low, high, or auto

  anthropic:
    model: "claude-3-sonnet-20240229"  # opus, sonnet, or haiku
    max_tokens: 4096
    temperature: 0.1

  gemini:
    model: "gemini-1.5-flash"  # gemini-1.5-pro or gemini-1.5-flash
    max_tokens: 4096
    temperature: 0.1

  qwen:
    model: "qwen-vl-max"  # 使用qwen-vl-max以获得更好的质量
    max_tokens: 16384  # 进一步增加以处理复杂SVG
    temperature: 0.1

  # LLM请求超时时间(秒)
  request_timeout_seconds: 600

  concurrency:
    enable: true
    max_parallel_requests: 3

  retry:
    max_attempts: 3
    delay_seconds: 2
    backoff_multiplier: 2

# Image Processing Settings
image:
  max_size_mb: 10
  supported_formats:
    - png
    - jpg
    - jpeg
    - pdf
  quality: 90
  base64_format: "jpeg"   # jpeg, png, webp
  base64_quality: 85
  base64_max_bytes: 3145728  # 3MB 上限, 超过会自动压缩/缩放
  preprocessing:
    resize_if_large: true
    max_dimension: 1600
    enhance_contrast: false
    denoise: false
  slicing:
    enable: true
    min_height: 2200
    aspect_ratio_threshold: 2.0
    target_height: 1100
    min_segment_height: 700
    overlap: 160  # 固定overlap模式下使用（当adaptive_overlap.enable=false时）
    whitespace_window: 150
    whitespace_density_threshold: 0.08
    max_segments: 0  # 0 表示不限制切片数量

    # 自适应overlap配置（根据切分点质量动态调整overlap大小）
    adaptive_overlap:
      enable: true  # 是否启用自适应overlap
      excellent_threshold: 0.05  # 极佳切分点阈值（内容密度 <= 0.05视为完全空白）
      good_threshold: 0.10       # 良好切分点阈值（内容密度 <= 0.10视为较空白）
      excellent_overlap: 0       # 极佳切分点使用的overlap（px）
      good_overlap: 30           # 良好切分点使用的overlap（px）
      default_overlap: 160       # 默认overlap（在内容区域切分时使用）

    debug:
      save_segments: true
      output_dir: "logs/segments"
      clear_before_save: true
    page_break_detection:
      enable: true
      whiteness_threshold: 0.97
      min_blank_height: 180
      margin_ratio: 0.04

# Formula Conversion Settings
formula:
  output_format: "mathml"  # mathml or latex
  preserve_latex: false  # Keep LaTeX in comments
  inline_formulas: true
  
# Document Generation Settings
document:
  default_font: "Arial"
  default_font_size: 11
  heading_font_size: 14
  include_original_image: true
  image_width_inches: 6.0
  page_margins:
    top: 1.0
    bottom: 1.0
    left: 1.0
    right: 1.0

# Graphics Generation Settings (for 3D geometry, diagrams, etc.)
graphics:
  enabled: true
  backend: "tikz"  # tikz, matplotlib, or svg

  tikz:
    latex_command: "pdflatex"
    convert_dpi: 300
    timeout_seconds: 30

  matplotlib:
    figure_size: [8, 6]
    dpi: 300

  svg:
    validate: true
    convert_to_png: true
  
# Prompt Templates
prompts:
  system_message: |
    You are an expert in accurately transcribing mathematical content from images.
    Always respond in Chinese unless a different language is explicitly requested.
    Faithfully reproduce ALL visible content: text, formulas, labels, and geometry annotations, preserving the original wording and order without adding commentary.

    ⚙️ 统一输出格式
    - 你必须只输出一个合法的 JSON 对象：{"text": "...", "figure_svg": "..."}
    - 不要添加 Markdown、额外说明、代码块或多余键。
    - JSON 字符串中的双引号必须写成 \"，换行写成 \n，确保整体可解析。

    📄 “text” 字段要求
    - 完整转录图片中的文字内容，保持原有段落和标点。
    - 行内公式用 $...$，独立公式用 $$...$$。
    - 所有数学符号转换为对应的 LaTeX 命令（见下方列表），严禁使用 Unicode 数学字符。
    - 若图片包含几何题，需在文字描述中清楚说明图形信息，与 SVG 标注一致。

    🖼️ “figure_svg” 字段要求
    - 当图片含有几何图（平面或立体）时，提供与之匹配的完整 SVG 代码字符串；若没有图形，设置为空字符串 ""。
    - 必须包含合适的 viewBox（例如 viewBox="0 0 200 200"）。
    - 仅使用基础元素（<path>、<line>、<circle>、<text> 等），并保持 SVG 精简。
    - 可见棱：stroke="black"、stroke-width="1" 的实线；不可见棱：同色细度但带 stroke-dasharray="4 3"。
    - 在所有关键顶点附近使用 <text>（font-size 约 10px）标注大写字母，如 A、B、C、P、Q，位置应与文字描述一致。
    - 默认填充为空（fill="none" 或省略），除非需要特殊强调。
    - SVG 代码必须与题面一致，不得使用占位符或与文字不符的图形。

    ✅ 必须使用的 LaTeX 命令
    - 求和：\sum_{i=1}^{N}
    - 连乘：\prod_{i=1}^{n}
    - 积分：\int_{a}^{b}
    - 平均/上划线：\bar{X}, \overline{XYZ}
    - 分数：\frac{a}{b}
    - 根号：\sqrt{expression}
    - 无穷：\infty
    - 希腊字母：\alpha, \beta, \gamma, \delta, \theta, \lambda, \mu, \pi, \sigma, \phi, \omega
    - 关系符号：\approx, \neq, \leq, \geq, \in, \subset, \cup, \cap
    - 运算符：\times, \div, \pm, \cdot
    - 箭头：\rightarrow, \leftarrow, \Rightarrow, \Leftrightarrow
    - 逻辑：\forall, \exists, \wedge, \vee, \neg
    - 矩阵：\begin{pmatrix}...\end{pmatrix}, \begin{bmatrix}...\end{bmatrix}, \begin{vmatrix}...\end{vmatrix}

    ❌ 禁止出现的 Unicode 数学字符
    - Σ, ∑, Π, ∏, ∫, √, ∞ 等；请使用对应 LaTeX。
    - α, β, γ, δ, θ, λ, μ, π, σ, φ, ω 等；请使用 \alpha 等写法。
    - ≈, ≠, ≤, ≥, ∈, ⊂, ∪, ∩ 等；请使用 \approx 等写法。
    - ×, ÷, ±, ⋅ 等；请使用 \times 等写法。
    - 组合符号如 Ȳ、x̄ 等；请使用 \bar{Y}、\bar{x}。
    - 形式如 (a+b)/c；请使用 \frac{a+b}{c}。

    🧾 示例（仅供理解，不要抄写）
    - 若图片展示公式“平均值 Ȳ = (1/N)ΣYᵢ”：
      {"text": "平均值 $$\\bar{Y} = \\frac{1}{N}\\sum_{i=1}^{N} Y_i$$", "figure_svg": ""}
    - 若图片含有立体几何图，需在 "text" 描述所有条件，并在 "figure_svg" 中给出匹配的 SVG。

    始终保持 JSON 合法、文本与 SVG 对齐。

  user_message: |
    请根据提供的图片内容完成以下任务，并严格按要求作答：

    1. 只输出一个 JSON 对象：{"text": "...", "figure_svg": "..."}，不要添加其它文字或代码块。
    2. "text" 内完整转录图片文字，保留原段落；公式使用 $...$ 或 $$...$$，并全部转换为标准 LaTeX 命令。
    3. 如果图片出现几何图形，"figure_svg" 必须给出匹配的 SVG 代码字符串：含 viewBox，使用 <path>/<line>/<circle>/<text> 等元素；可见棱为黑色 1px 实线，隐藏棱使用 stroke-dasharray="4 3"；在顶点旁标注大写字母（字体约 10px）。
    4. 如果没有几何图形，则将 "figure_svg" 设为 ""（空字符串）。
    5. SVG 字符串内的双引号写成 \"，换行写成 \n，保证 JSON 可解析。
    6. 禁止使用 Unicode 数学符号，全部改写为 LaTeX 命令（例如 \sum、\alpha、\sqrt 等）。
    7. 不得使用占位符或与题意不符的内容，须确保文字与 SVG 完全一致。



  geometry_svg_system: |
    You are an expert math problem setter and SVG illustrator. Your job is to generate challenging three-dimensional geometry problems and provide a matching SVG diagram that satisfies strict formatting constraints.

    OUTPUT FORMAT (MANDATORY):
    - Respond with exactly one valid JSON object that contains two keys: "text" and "figure_svg".
    - Do not output Markdown, comments, additional prose, or multiple JSON objects.
    - The "text" field must be a Chinese description of the 3D geometry problem, including all necessary numerical data and the final question.
    - The "figure_svg" field must be a single-line string that contains complete SVG code. Escape double quotes as \" and encode line breaks as \n.

    SVG REQUIREMENTS:
    - Include a suitable viewBox attribute such as viewBox="0 0 200 200".
    - Use fundamental SVG elements like <path>, <line>, <circle>, and <text> to depict the solid.
    - Draw visible edges with solid black lines (stroke="black", stroke-width="1"), and hidden edges with dashed lines using stroke-dasharray="4 3".
    - Label every relevant vertex directly beside the point using <text> elements (font-size about 10px) with uppercase letters such as A, B, C, P, Q.
    - Ensure all strokes are black with stroke-width="1" and fills are transparent unless a solid face must be highlighted.
    - Produce accurate geometry; do not return placeholders or approximate sketches unrelated to the described solid.

    GENERAL RULES:
    - The JSON must be syntactically valid and directly parsable.
    - Keep the SVG concise but complete, ensuring all elements referenced in the text appear in the diagram.
    - If you cannot satisfy the requirements, explain the issue succinctly inside the "text" value while still outputting valid JSON.

  geometry_svg_user: |
    请生成一道关于立体几何（如棱锥、棱柱等）的题目，并按照以下要求返回 JSON：
    1. 仅输出形如 {"text": "...", "figure_svg": "..."} 的合法 JSON；不得包含其他说明或多余文本。
    2. "text" 字段写出中文题目，给出全部已知条件和求解目标。
    3. "figure_svg" 字段写出完整 SVG 代码字符串：必须包含 viewBox，使用 <path>/<line>/<circle>/<text> 等元素；可见棱用实线，不可见棱用 stroke-dasharray="4 3" 的虚线；在各顶点附近标注 A、B、C、P、Q 等字母（字体约 10px）；所有线条为黑色、粗细 1。
    4. SVG 中的双引号需转义为 \"，换行写成 \n，确保整段 SVG 是一个字符串。
    5. 不得返回占位符或空内容，题目与图形需相互对应且严谨。


# Logging Settings
logging:
  level: "INFO"  # DEBUG, INFO, WARNING, ERROR, CRITICAL
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file_rotation: true
  max_bytes: 10485760  # 10MB
  backup_count: 5
  console_output: true
  
# Output Settings
output:
  directory: "output"
  filename_pattern: "math_problem_{timestamp}.docx"
  save_intermediate: false  # Save LaTeX and other intermediate files
  
# Performance Settings
performance:
  parallel_processing: false
  cache_api_responses: false
  cache_ttl_hours: 24
